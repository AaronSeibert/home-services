authentik:
  global:
    env:
      - name: AUTHENTIK_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: authentik-secrets
            key: secret-key
      - name: POSTGRES_PASSWORD
        value: authentik
      - name: POSTGRES_USER
        value: authentik
      - name: POSTGRES_DB
        value: authentik
      - name: POSTGRES_HOST
        value: iam-postgres
      - name: AUTHENTIK_POSTGRESQL__HOST
        value: iam-postgres
      - name: AUTHENTIK_POSTGRESQL__USER
        value: authentik
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        value: authentik
      - name: AUTHENTIK_REDIS__HOST
        value: iam-redis
    #   - name: POSTGRES_PASSWORD
    #     valueFrom:
    #       secretKeyRef:
    #         name: authentik-secrets
    #         key: pg-password
    #   - name: POSTGRES_USER
    #     valueFrom:
    #       secretKeyRef:
    #         name: authentik-secrets
    #         key: pg-password
  authentik:
    error_reporting:
      enabled: false
  server:
    ingress:
      ingressClassName: traefik
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: traefik
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: SSO
        gethomepage.dev/icon: si-authentik
        gethomepage.dev/group: IAM
        gethomepage.dev/siteMonitor: "https://authentik.seibert.family"
      hosts:
        - authentik.seibert.family
      tls:
        - hosts:
            - authentik.seibert.family
          secretName: authentik-cert
postgres:
  configMap:
      postgresDb: authentik
      postgresPassword: authentik
      postgresUser: authentik
  persistence:
    accessMode: ReadWriteMany
    enabled: true
redis:
  persistence:
    accessMode: ReadWriteMany
    enabled: true
